user.name=jensenq
user.email=jensenq@wwu.edu
merge.tool=opendiff
color.ui=auto
core.excludesfile=/Users/gamblin2/.gitignore_global
core.pager=less -R
pager.lg=less -RS
pager.lga=less -RS
pager.status=less -RS
alias.st=status
alias.ci=commit
alias.co=checkout
alias.unadd=reset HEAD
alias.gr=!git grep
alias.br=branch --sort=-committerdate         --format '%(HEAD) %(color:red)%(objectname:short)%(color:reset)  %(if)%(HEAD)%(then)%(color:green)%(refname:short)%(color:reset)%(else)%(refname:short)%(end) - %(color:cyan)(%(committerdate:relative))%(color:reset)'
alias.bv=branch --sort=-committerdate         --format '%(HEAD) %(color:red)%(objectname:short)%(color:reset)  %(if)%(HEAD)%(then)%(color:green)%(refname:short)%(color:reset)%(else)%(refname:short)%(end) - %(color:cyan)(%(committerdate:relative))%(color:reset)%(if)%(upstream)%(then) -> %(color:magenta)%(upstream:short) %(color:white)%(upstream:track)%(color:reset)%(end)'
alias.b=!f() {             if [ $# -ne 0 ]; then                 git branch "$@";             else                 git for-each-ref --sort=-committerdate refs/heads/                 --format='%(HEAD) %(color:red)%(objectname:short)%(color:reset)  %(if)%(HEAD)%(then)%(color:green)%(refname:short)%(color:reset)%(else)%(refname:short)%(end) - %(color:cyan)(%(committerdate:relative))%(color:reset)';             fi;         }; f
alias.lg=log --oneline --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%aN>%Creset' --abbrev-commit --
alias.lgm=log --first-parent  --oneline --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%aN>%Creset' --abbrev-commit --
alias.lgb=log --first-parent  --oneline --color --graph --pretty=format:'%s' --abbrev-commit --
alias.lga=log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%aN>%Creset' --abbrev-commit --branches --remotes --tags --
alias.tarball=!f() {         filename="$1";         if [ "x$filename" = x ]; then             name="$(basename $(git rev-parse --show-toplevel))" &&             head=$(git log -1 --format="%h" HEAD) &&             dstamp=$(git log -1 --format="%ci" HEAD | awk '{print $1}') &&             filename="${name}-${dstamp}-${head}";         fi;         git archive --format=tar.gz --prefix="${filename}/" HEAD -o ${filename}.tar.gz;     }; f
alias.bpurge=!git branch --merged |                grep -v '^\*|master|develop|release' |                xargs -n 1 git branch -d
alias.bpurge-force=!git branch --merged |                      egrep -v '^\*|master|develop|release' |                      xargs -n 1 git branch -D
alias.contrib=!f() {        printf '%7s %-30s %s
' COMMITS NAME EMAIL &&         git log --branches --pretty=format:'%<(30)%aN %aE' HEAD -- $(             for d in "$@"; do echo "${GIT_PREFIX:-${d}}"; done         )| sort | uniq -c | sort -nr;     }; f
alias.lcontrib=!f() {         for file in $(             git ls-tree --name-only -r HEAD -- $(                 for d in "$@"; do echo "${GIT_PREFIX:-${d}}"; done             )         ); do             git blame -w --line-porcelain $file |                 perl -ne '                    if (/^[0-9a-f]{40} / .. /^filename /) {                         $author = $_ if (s/^author //);                     } else {                         print $author unless /^\s*(\#.*)?$/;                     }';         done | sort | uniq -c | sort -nr;     }; f
alias.ghstats=!f() {         printf "%-8s%-9s%-9s%-9s%s\n" '#' COMMITS INSERTED DELETED AUTHOR;         git log --use-mailmap --shortstat HEAD -- $(             for d in "$@"; do                 echo "${GIT_PREFIX:-${d}}";             done         ) | perl -e '             while (<>) {                 if (/^Author: (.*)$/) {                     $a = $1;                     $c{$a} = 0 unless defined $c{$a};                     $i{$a}=0 unless defined $i{$a};                     $d{$a}=0 unless defined $d{$a};                 }                 if (/^ (\d+) files? changed(?:, (\d+) insertions?\(\+\))?(?:, (\d+) deletions?\(\-\))?/) {                     $c{$a} += 1;                     $i{$a} += $2;                     $d{$a} += $3;                 }             };             printf("%-9d%-9d%-9d%s\n", $c{$_}, $i{$_}, $d{$_}, $_) for (keys %i);'         | sort -nr | nl -n ln -w 5;     }; f
alias.closed=!for br in $(git branch); do if git is-merged $br &>/dev/null; then echo $br; fi; done
alias.ghname=!f() {        git remote -v |            perl -ne '                if (s/.*github.com[:\/]([^\/]*)\/([^.\s]*).*/\2/) { print; }'|            sort |            uniq |            head -1;        }; f
alias.ghadd=!f() {        name=$(git ghname) &&         git remote add $1 git@github.com:$1/$name.git;     }; f
push.default=simple
credential.helper=cache --timeout=43200
http.postbuffer=524288000
difftool.prompt=false
difftool.cmd=opendiff "$LOCAL" "$REMOTE"
mergetool.sourcetree.cmd=/Users/gamblin2/Applications/SourceTree.app/Contents/Resources/opendiff-w.sh "$LOCAL" "$REMOTE" -ancestor "$BASE" -merge "$MERGED"
mergetool.sourcetree.trustexitcode=true
difftool.sourcetree.cmd=opendiff "$LOCAL" "$REMOTE"
difftool.sourcetree.path=
rerere.enabled=true
rebase.instructionformat=(%an <%ae>) %s
rebase.autosquash=true
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
remote.origin.url=https://github.com/jensenq/my_configs.git
remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
branch.master.remote=origin
branch.master.merge=refs/heads/master
